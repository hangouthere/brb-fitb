:root {
  // Assume stored in ms
  --delay-letter: 100;
  // Assume stored in ms
  --delay-showPlayer: 3000;
}

$COLOR_TEXT_CATEGORY: rgb(226, 205, 19);
$COLOR_TEXT_ANSWERED: rgb(175 255 181);
$COLOR_TEXT_PLAYER_CORRECT: rgb(9, 255, 0);
$COLOR_TEXT_PLAYER_INCORRECT: rgb(221, 46, 46);
$COLOR_TEXT_TIMEUP: rgb(255, 179, 179);
$COLOR_BORDER_BLANK: rgb(0, 217, 255);
$COLOR_BORDER_ANSWERED: rgb(9, 255, 0);
$COLOR_BORDER_TIMEUP: rgb(221, 46, 46);
$ANIM_DUR_LETTER: 200ms;
$ANIM_DUR_HIDDEN: 500ms;
$ANIM_DUR_ANSWER: 2500ms;

.page-wrapper {
  position: relative;
}

.answer-list {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

  .answer {
    position: absolute;
    animation: answer-in $ANIM_DUR_ANSWER ease forwards;

    &.correct {
      color: $COLOR_TEXT_PLAYER_CORRECT;
    }

    &.incorrect {
      color: $COLOR_TEXT_PLAYER_INCORRECT;
    }
  }

  $MAX_NUM_PLAYERS: 100;
  @for $playerIndex from 1 through $MAX_NUM_PLAYERS {
    .answer:nth-child(#{$MAX_NUM_PLAYERS}n + #{$playerIndex}) {
      top: 15% + random(75) / 100 * 100%;
      left: 15% + random(75) / 100 * 100%;
    }
  }
}

.entry-display {
  .category {
    color: $COLOR_TEXT_CATEGORY;
  }

  .entry {
    font-size: 32px;

    .word {
      position: relative;
      display: inline-block;

      &:not(:last-child) {
        margin-right: 10px;
      }

      &.blanked .letter {
        opacity: 0;
      }

      &:not(.blanked) .letter {
        opacity: 0;
        position: relative;
        display: inline-block;
        transform: all ease-out;
        animation: letter-in $ANIM_DUR_LETTER forwards;
      }

      &.chosen {
        border-style: solid;
        border-color: $COLOR_BORDER_BLANK;
        border-width: 0;
        border-bottom-width: 0;
        animation: chosen-in $ANIM_DUR_HIDDEN forwards;
      }
    }

    &.is-timeup {
      .word.chosen {
        color: $COLOR_TEXT_TIMEUP;
        border-color: $COLOR_BORDER_TIMEUP;
      }
    }

    &.is-answered {
      .word.chosen {
        color: $COLOR_TEXT_ANSWERED;
        border-color: $COLOR_BORDER_ANSWERED;
      }
    }
  }
}

@keyframes letter-in {
  from {
    opacity: 0;
    top: 30px;
    transform: rotate(-45deg) scale(0);
  }
  to {
    opacity: 1;
    top: 0;
    transform: rotate(0deg) scale(1);
  }
}

@keyframes chosen-in {
  from {
    opacity: 0;
    top: 50px;
    border-bottom-width: 50px;
  }
  to {
    opacity: 1;
    top: 0;
    border-bottom-width: 4px;
    border-bottom-left-radius: 8px;
    border-bottom-right-radius: 8px;
  }
}

@keyframes hidden-pulse {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.5;
  }
}

@keyframes answer-in {
  $OFFSET: 5px;
  $ROTATE: 10deg;

  0% {
    opacity: 1;
    transform: scale(1);
  }

  33% {
    transform: translateX(-#{$OFFSET}) rotate(-#{$ROTATE});
  }

  66% {
    transform: translateX(calc(#{$OFFSET} / 3.3)) rotate(calc(#{$ROTATE} / 3));
  }

  100% {
    opacity: 0;
    top: 0%;
    transform: scale(0);
    transform: translateX(0);
  }
}
